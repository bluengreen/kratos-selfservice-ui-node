# This docker-compose file sets up ORY Kratos, ORY Hydra, and this app in a network and configures
# in such a way that ORY Kratos is the Login Provider for ORY Hydra.

version: "3.7"

services:
  hydra-migrate:
    image: oryd/hydra:v2.1.1
    environment:
      # - DSN=sqlite:///var/lib/sqlite/db.sqlite?_fk=true&mode=rwc
      - DSN=postgres://postgres:postgres@db:5432/hydra?sslmode=disable&max_conns=20&max_idle_conns=4
    command: migrate sql -e --yes
    restart: on-failure
    networks:
      - intranet
    depends_on:
      - db

  hydra:
    image: oryd/hydra:v2.1.1
    ports:
      - "4444:4444" # Public port
      - "4445:4445" # Admin port
      - "5555:5555" # Port for hydra token user
    command:
      # serve all --dangerous-force-http
      serve all --dev
    restart: on-failure # TODO figure out why we need this (incorporate health check into hydra migrate command?)
    environment:
      - LOG_LEAK_SENSITIVE_VALUES=true
      - URLS_SELF_ISSUER=http://127.0.0.1:4444
      - URLS_SELF_PUBLIC=http://127.0.0.1:4444
      - URLS_CONSENT=http://127.0.0.1:3000/consent
      - URLS_LOGIN=http://127.0.0.1:3000/login
      - URLS_LOGOUT=http://127.0.0.1:3000/logout
      - SECRETS_SYSTEM=youReallyNeedToChangeThis
      - OIDC_SUBJECT_IDENTIFIERS_SUPPORTED_TYPES=public,pairwise
      - OIDC_SUBJECT_IDENTIFIERS_PAIRWISE_SALT=youReallyNeedToChangeThis
      # - DSN=sqlite:///var/lib/sqlite/db.sqlite?_fk=true&mode=rwc
      - DSN=postgres://postgres:postgres@db:5432/hydra?sslmode=disable&max_conns=20&max_idle_conns=4
    networks:
      - intranet
    depends_on:
      - hydra-migrate
      - db

  kratos-migrate:
    image: oryd/kratos:v1.0.0
    environment:
      # - DSN=sqlite:///var/lib/sqlite/db.sqlite?_fk=true&mode=rwc
      - DSN=postgres://postgres:postgres@db:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
    volumes:
      - type: bind
        source: ./kratos
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: on-failure
    networks:
      - intranet
    depends_on:
      - db

  kratos:
    image: oryd/kratos:v1.0.0
    ports:
      - "4433:4433" # public
      - "4434:4434" # admin
    restart: unless-stopped
    environment:
      # - DSN=sqlite:///var/lib/sqlite/db.sqlite?_fk=true
      - DSN=postgres://postgres:postgres@db:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
    command: serve -c /etc/config/kratos/kratos.yml --dev
    volumes:
      - type: bind
        source: ./kratos
        target: /etc/config/kratos
    networks:
      - intranet
    depends_on:
      - kratos-migrate
      - db

  kratos-selfservice-ui-node:
    # image: oryd/kratos-selfservice-ui-node:v0.13.0-4
    build:
      context: .
      dockerfile: Dockerfile-dev
    environment:
      - HYDRA_ADMIN_URL=http://hydra:4445
      - KRATOS_PUBLIC_URL=http://kratos:4433
      - KRATOS_ADMIN_URL=http://kratos:4434
      - SECURITY_MODE=standalone
      - KRATOS_BROWSER_URL=http://127.0.0.1:4433
    ports:
      - "3000:3000"
    networks:
      - intranet
    volumes:
      - ./:/usr/src/app
      - /tmp/ui-node/logs:/root/.npm/_logs

  # Sending emails is not part of this demo, so this is commented out:
  #
  #  mailslurper:
  #    image: oryd/mailslurper:latest-smtps
  #    ports:
  #      - "4436:4436"
  #      - "4437:4437"
  #    networks:
  #      - intranet

  db:
    image: postgres:14-alpine
    container_name: auth-db
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5434:5432"
    volumes:
      - db:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d/
    networks:
      - intranet

networks:
  intranet:
    driver: bridge

volumes:
  db:
    driver: local
